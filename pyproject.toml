[project]
name = "rpi-lcd"
version = "0.2.0"
description = "Ansible Role - Raspberry Pi LCD."
authors = [
    {name = "Federico Jaureguialzo", email = "fedejaure@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
  "ansible>=11.3.0,<12.0.0",
]

[project.urls]
homepage = "https://github.com/fedejaure/ansible-role-rpi-lcd"
repository = "https://github.com/fedejaure/ansible-role-rpi-lcd"
"Bug Tracker" = "https://github.com/fedejaure/ansible-role-rpi-lcd/issues"

[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = "<3.12,>=3.11"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.2.0"
invoke = "^2.2.0"
bump2version = "^1.0.1"

[tool.poetry.group.test.dependencies]
molecule = "^24.12.0"
molecule-plugins = {extras = ["docker"], version = "^23.6.0"}

[tool.poetry.group.lint.dependencies]
isort = "^6.0.1"
black = "^25.1"
ruff = "^0.11.4"
yamllint = "^1.37.0"
ansible-lint = {version = "^25.1.3", markers = "platform_system != 'Windows'"}

[tool.poetry.group.security.dependencies]
safety = "^3.3.1"

[tool.poetry.group.typing.dependencies]
mypy = "^1.15.0"

[tool.ruff]
target-version = "py311"
output-format = "full"
line-length = 99
fix = true
extend-exclude = [
    "docs/*",
]

[tool.ruff.lint]
select = [
  "E", "F", "W",  # flake8
  "C",  # mccabe
  "I",  # isort
  "N",  # pep8-naming
  "D",  # flake8-docstrings
  "ANN",  # flake8-annotations
  "S",  # flake8-bandit
  "BLE",  # flake8-blind-except
  "B",  # flake8-bugbear
  "A",  # flake8-builtins
  "G",  # flake8-logging-format
  "ERA",  # eradicate
  "ISC",  # flake8-implicit-str-concat
  "RUF",  # Ruff-specific rules
]
ignore = ["ANN101", "D203", "D213"]
unfixable = [
  "ERA",  # Don't remove commented-out code
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]
".jupyter/jupyter_lab_config.py" = ["E501", "ERA001"]
"src/deeptune/utils.py" = ["ANN401"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 99
known_third_party = ["invoke", "nox"]

[tool.black]
line-length = 99
target-version = ["py311"]

[tool.mypy]
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = ["pytest.*", "invoke.*", "nox.*"]
allow_redefinition = false
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = true
local_partial_types = true
strict_optional = true
strict_equality = true
no_implicit_optional = true
warn_unused_ignores = true
warn_unreachable = true
warn_no_return = true

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
